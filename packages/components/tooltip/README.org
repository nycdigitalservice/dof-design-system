#+title: Tooltip

A tooltip is a popup that displays information related to an element
when the element receives keyboard focus or the mouse hovers over
it. It typically appears after a small delay and disappears when
Escape is pressed or on mouse out.

** Example

#+html: <div class="example-wrapper">
#+results: tooltip-basic-example
#+html: </div>

#+name: tooltip-basic-example
#+begin_src html :exports both :results replace html
  <ul>
    <li>
      The property must be classified as a
      <button>
        tax class 2 property
        <i class="i-ri:information-fill color-primary"></i>
        <nyc-tooltip inert role="tooltip" tip-position="top">
          <span class="font-bold block mb-2">Tax Class 2 Property</span>
          Most residential properties with more than three units are class 2
        </nyc-tooltip>
      </button>.
    </li>
    <li>The co-op or condo unit must be the owner's primary residence.</li>
    <li>The owner must have purchased the unit on or before January 5 to qualify for the abatement for the upcoming tax year</li>
    <li>New owners must have filed a Real Property Transfer Tax (RPTT) form or deed with the Division of Land Records on ACRIS. </li>
    <li>Prevailing wage affidavits must be filed for certain properties. View a list of properties required to file the prevailing wage affidavit.</li>
  </ul>
#+end_src

** CSS

#+begin_src css :tangle src/tooltip.css
  nyc-tooltip {
    --_p-inline: 1rem;
    --_p-block: 1rem;
    --_triangle-size: 20px;
    --_bg: var(--nyc-cmp-tooltip-background-color, hsla(214, 54%, 95%, 1));
    --_color: var(--nyc-cmp-tooltip-color, inherit);
    --_shadow-alpha: 50%;

    --isRTL: -1;

    --_bottom-tip: conic-gradient(from -30deg at bottom, #0000, #000 1deg 60deg, #0000 61deg) bottom / 100% 50% no-repeat;
    --_top-tip: conic-gradient(from 150deg at top, #0000, #000 1deg 60deg, #0000 61deg) top / 100% 50% no-repeat;
    --_right-tip: conic-gradient(from -120deg at right, #0000, #000 1deg 60deg, #0000 61deg) right / 50% 100% no-repeat;
    --_left-tip: conic-gradient(from 60deg at left, #0000, #000 1deg 60deg, #0000 61deg) left / 50% 100% no-repeat;

    pointer-events: none;
    user-select: none;

    opacity: 0;
    transform: translateX(var(--_x, 0)) translateY(var(--_y, 0));
    transition: opacity .2s ease, transform .2s ease;

    position: absolute;
    z-index: 1;
    inline-size: max-content;
    max-inline-size: 25ch;
    text-align: start;
    font-size: 1rem;
    font-weight: normal;
    line-height: initial;
    padding: var(--_p-block) var(--_p-inline);
    margin: 0;
    border-radius: 5px;
    background: var(--_bg);
    color: var(--_color);
    will-change: filter;
    filter: 
      drop-shadow(0 3px 3px hsl(0 0% 0% / var(--_shadow-alpha))) 
      drop-shadow(0 12px 12px hsl(0 0% 0% / var(--_shadow-alpha)));

    /* light theme style adjustments */
    @media (prefers-color-scheme: light) {
      --_bg: white;
      --_shadow-alpha: 15%;
    }

    &:dir(rtl) {
      --isRTL: 1;
    }

    /* create a stacking context for elements with > nyc-tooltips */
    @nest :has(> &) {
      position: relative;

      /* when those parent elements have focus, hover, etc */
      &:is(:hover, :focus-visible, :active) > nyc-tooltip {
        opacity: 1;
        transition-delay: 200ms;
      }
    }

    /* prepend some prose for screen readers only */
    &::before {
      content: "; Has tooltip: ";
      clip: rect(1px, 1px, 1px, 1px);
      clip-path: inset(50%);
      height: 1px;
      width: 1px;
      margin: -1px;
      overflow: hidden;
      padding: 0;
      position: absolute;
    }

    /* tooltip shape is a pseudo element so we can cast a shadow */
    &::after {
      content: "";
      background: var(--_bg);
      position: absolute;
      z-index: -1;
      inset: 0;
      mask: var(--_tip);
    }

    /* top tooltip styles */
    &:is(
      [tip-position="top"],
      [tip-position="block-start"],
      :not([tip-position]),
      [tip-position="bottom"],
      [tip-position="block-end"]
    ) {
      /* text-align: center; */
    }

    /* TOP || BLOCK START */
    &:is([tip-position="top"], [tip-position="block-start"], :not([tip-position])) {
      inset-inline-start: 50%;
      inset-block-end: calc(100% + var(--_p-block) + var(--_triangle-size));
      --_x: calc(50% * var(--isRTL));

      @media (prefers-reduced-motion: no-preference) {
        @nest :has(> &):not(:hover, :active) nyc-tooltip {
          --_y: 3px;
        }
      }

      &::after {
        --_tip: var(--_bottom-tip);
        inset-block-end: calc(var(--_triangle-size) * -1);
        border-block-end: var(--_triangle-size) solid transparent;
      }
    }

    /* RIGHT || INLINE END */
    &:is([tip-position="right"], [tip-position="inline-end"]) {
      inset-inline-start: calc(100% + var(--_p-inline) + var(--_triangle-size));
      inset-block-end: 50%;
      --_y: 50%;

      @media (prefers-reduced-motion: no-preference) {
        @nest :has(> &):not(:hover, :active) nyc-tooltip {
          --_x: calc(var(--isRTL) * -3px * -1);
        }
      }

      &::after {
        --_tip: var(--_left-tip);
        inset-inline-start: calc(var(--_triangle-size) * -1);
        border-inline-start: var(--_triangle-size) solid transparent;
      }

      &:dir(rtl)::after {
        --_tip: var(--_right-tip);
      }
    }

    /* BOTTOM || BLOCK END */
    &:is([tip-position="bottom"], [tip-position="block-end"]) {
      inset-inline-start: 50%;
      inset-block-start: calc(100% + var(--_p-block) + var(--_triangle-size));
      --_x: calc(50% * var(--isRTL));

      @media (prefers-reduced-motion: no-preference) {
        @nest :has(> &):not(:hover, :active) nyc-tooltip {
          --_y: -3px;
        }
      }

      &::after {
        --_tip: var(--_top-tip);
        inset-block-start: calc(var(--_triangle-size) * -1);
        border-block-start: var(--_triangle-size) solid transparent;
      }
    }

    /* LEFT || INLINE START */
    &:is([tip-position="left"], [tip-position="inline-start"]) {
      inset-inline-end: calc(100% + var(--_p-inline) + var(--_triangle-size));
      inset-block-end: 50%;
      --_y: 50%;

      @media (prefers-reduced-motion: no-preference) {
        @nest :has(> &):not(:hover, :active) nyc-tooltip {
          --_x: calc(var(--isRTL) * 3px * -1);
        }
      }

      &::after {
        --_tip: var(--_right-tip);
        inset-inline-end: calc(var(--_triangle-size) * -1);
        border-inline-end: var(--_triangle-size) solid transparent;
      }

      &:dir(rtl)::after {
        --_tip: var(--_left-tip);
      }
    }
  }
#+end_src

** References

- [[https://web.dev/building-a-tooltip-component/][Building a tooltip component]]
- [[https://www.w3.org/WAI/ARIA/apg/patterns/tooltip/][ARIA Authoring Practices Guide: Tooltip Pattern]]
- [[https://inclusive-components.design/tooltips-toggletips/][Inclusive Components: Tooltips & Toggletips]]
