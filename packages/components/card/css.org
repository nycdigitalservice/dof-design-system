#+title: Card CSS

** Custom properties

| Property                    | Default |
|-----------------------------+---------|
| --nyc-cmp-card-color        | inherit |
| --nyc-cmp-card-background   | white   |
| --nyc-cmp-card-border-width | 2px     |
| --nyc-cmp-card-border-color | grey    |
| --nyc-cmp-card-shadow       | none    |
| --nyc-cmp-card-padding      | .75rem  |


#+name: card-variables
#+begin_src css
    --_background: var(--nyc-cmp-card-background, white);
    --_background-hover: var(--nyc-cmp-card-background-hover, white);
    --_shadow: var(--nyc-cmp-card-shadow, none);
    --_color: var(--nyc-cmp-card-color, inherit);
    --_color-hover: var(--nyc-cmp-card-color-hover, inherit);
    --_body-color: var(--nyc-cmp-card-body-color, inherit);
    --_border-color: var(--nyc-cmp-card-border-color, hsla(0, 0%, 93%, 1));
    --_border-width: var(--nyc-cmp-card-border-width, 1px);
    --_border: var(--nyc-cmp-card-border, 1px solid var(--_border-color));
    --_border-hover: var(--nyc-cmp-card-border-hover, 1px solid (--_border-color));
    --_heading-font-size: var(--nyc-cmp-card-heading-font-size, 1.125rem);
    --_body-font-size: var(--nyc-cmp-card-body-font-size, 1rem);
#+end_src

** Base

We start by defining the Cards layout and style properties

#+begin_src css :noweb yes :noweb-ref card-base
  .card {
    <<card-variables>>

    container: card-container / inline-size;

    position: relative;
    display: flex;
    flex-direction: column;

    background-color: var(--_background);
    color: var(--_color);

    border: var(--_border-width) solid var(--_border-color);
    border-radius: 4px;
    box-shadow: var(--_shadow);

    transition: all .3s ease;
    /* min-block-size: 2.5rem; */

    &:hover {
      background: var(--_background-hover);
      color: var(--_color-hover);
      border: var(--_border-hover);
    }
  }
#+end_src

We use the [[file:../../composition/README.org][Flow]] composition pattern to apply vertical spacing

#+begin_src css :noweb-ref card-base
  .card > * + * {
    margin-block-start: .5rem;
  }
#+end_src

** Sections

Here we define layout and style for the cards Header, Media, and Body
sections

*** Card Header

#+begin_src css :noweb-ref card-sections
  .card__header {
    padding: 1rem;
    display: flex;
    flex: 1;
    & :--heading {
      flex: 1;
      font-size: var(--_heading-font-size);
    }
  }
#+end_src

*** Card Media

#+begin_src css :noweb-ref card-sections
  .card__media {
    order: -1;
    margin-block-start: 0;
    & img {
      width: 100%;
    }
  }
#+end_src

*** Card Body

#+begin_src css :noweb-ref card-sections
  .card__body {
    flex-grow: 1;
    padding: 1rem;
    padding-top: 0;
    color: var(--_body-color);
    font-size: var(--_body-font-size);
  }
#+end_src

** Primary action

The primary action is associated with an ~a~ or ~button~ element and makes
the entirety of the card clickable.

#+name: card-primary-action
#+begin_src css
  .card__primary-action,
  .card__primary-action:link {
    display: flex;
    color: currentColor;
    text-decoration: none;
    &:before {
      content: '';
      position: absolute;
      top: 0; /* 2 */
      left: 0; /* 2 */
      right: 0; /* 2 */
      bottom: 0; /* 2 */
      z-index: 1; /* 3 */
    }
    & > :first-child {
      flex: 1;
    }
    &:focus {
      text-decoration: underline;
    }
    & [class*=i-] {
      font-size: 1.5rem;
      margin-inline-start: .5rem;
    }
  }
#+end_src

** Container query

To adjust the cards presentation based on its width, we use a
[[https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_container_queries][Container Query]]

#+name: card-container-query
#+begin_src css
  /* @container grid-container (max-width: 768px) { */
  /*   .card { */
  /*     flex-direction: row; */
  /*     flex-wrap: wrap; */
  /*     overflow: hidden; */
  /*   } */
  /*   .card__header { */
  /*     flex: 1; */
  /*     flex-basis: 100%; */
  /*   } */
  /*   .card__media { */
  /*     width: 35%; */
  /*     height: 100%; */
  /*     position: absolute; */
  /*     & img { */
  /*       width: 100%; */
  /*       height: 100%; */
  /*       object-fit: cover; */
  /*     } */
  /*   } */
  /*   .card__body { */
  /*     flex-grow: 1; */
  /*     flex-basis: 100%; */
  /*   } */
  /*   .card:has(.card__media) { */
  /*     & .card__header, */
  /*     & .card__body { */
  /*       margin-left: auto; */
  /*       flex-basis: 65%; */
  /*       flex-grow: 0; */
  /*     } */
  /*   } */
  /* } */
  @container card-container (min-width: 320px) {
    .card__media {
      width: 35%;
      height: 100%;
      position: absolute;
      aspect-ratio: 1/1;
      & img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }
    .card__body {
      flex-grow: 1;
      flex-basis: 100%;
    }
    .card:has(.card__media) {
      & .card__header,
      & .card__body {
        margin-left: auto;
        flex-basis: 65%;
        flex-grow: 0;
        width: 65%;
      }
    }    
  }
  /* @container card (min-width: 11rem) and (max-width: 15rem) { */
  /*   .card__header { */
  /*     aspect-ratio: 4 / 3; */
  /*   } */
  /* } */

#+end_src

** Variants
*** Large Card

#+name: card-variant-large
#+begin_src css :noweb-ref variants
  .card[data-variant=large] {
    & * {
      display: flex;
      flex-wrap: wrap;
    }

    & .card__header {
      flex-grow: 1;
    }

    & .card__header :--heading {
      font-size: calc(var(--_heading-font-size) * 1.16);
      max-width: none;
      width: 100%;
    }

    .card__primary-action {
      /* flex-direction: column; */
      height: 100%;
      width: 100%;
      /* align-items: center; */
      & > :first-child {
        flex-basis: 280px;
      }
      & > :last-child {
        margin-block-start: auto;
        margin-inline-start: auto;
      }
    }

  }
#+end_src

** Appendix :noexport:

*** Tangle template
#+begin_src css :noweb yes :tangle src/card.css
  <<card-base>>
  <<card-sections>>
  <<card-primary-action>>
  <<variants>>
  <<card-container-query>>
#+end_src
